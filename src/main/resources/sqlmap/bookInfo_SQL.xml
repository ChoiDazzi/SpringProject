<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace : 매퍼xml 파일이 여러 개일 수 있음
	이를 구별하기 위한 식별 용도로 사용
 -->
<mapper namespace="bookInfo">
	<sql id="search">
		<if test="keyword!=null and keyword!=''">
			<!-- 전체 검색 -->
			AND (
					CATEGORY        LIKE '%' || #{keyword} ||'%' OR
					NAME            LIKE '%' || #{keyword} ||'%' OR
					DESCRIPTION     LIKE '%' || #{keyword} ||'%' OR
					AUTHOR          LIKE '%' || #{keyword} ||'%' OR
					PUBLISHER       LIKE '%' || #{keyword} ||'%'
			)
		</if>
	</sql>
	<insert id="addBookPost" parameterType="bookInfoVO">
		INSERT INTO BOOK_INFO(BOOK_ID, NAME, UNIT_PRICE, AUTHOR, DESCRIPTION, PUBLISHER,
							  CATEGORY, UNITS_IN_STOCK, TOTAL_PAGES, RELEASE_DATE, CONDITION)
		VALUES(#{bookId},#{name},#{unitPrice},#{author},#{description},#{publisher},
		       #{category},#{unitsInStock},#{totalPages},#{releaseDate},#{condition})
	</insert>
	 <insert id="addAttach" parameterType="attachVO">
		<selectKey resultType="int" order="BEFORE" keyProperty="seq">
			SELECT NVL(MAX(SEQ),0) + 1 FROM ATTACH
		</selectKey>
		 INSERT INTO ATTACH(SEQ, BOOK_ID, FILENAME)
		 VALUES(#{seq}, #{bookId},#{filename})
	 </insert>

	<!-- 도서코드 자동 생성 -->
	<select id="getBookId" resultType="String">
		SELECT SUBSTR(NVL(MAX(BOOK_ID),'ISBN1234'),1,4)
				|| TRIM((SUBSTR(NVL(MAX(BOOK_ID),'ISBN1234'),5) + 1))
		FROM BOOK_INFO
	</select>

	<resultMap type="bookInfoVO" id="bookInfoMap">
		<result property="rnum" column="RNUM" />
		<result property="bookId" column="BOOK_ID" />
		<result property="name" column="NAME" />
		<result property="unitPrice" column="UNIT_PRICE" />
		<result property="author" column="AUTHOR" />
		<result property="description" column="DESCRIPTION" />
		<result property="publisher" column="PUBLISHER" />
		<result property="category" column="CATEGORY" />
		<result property="unitsInStock" column="UNITS_IN_STOCK" />
		<result property="totalPages" column="TOTAL_PAGES" />
		<result property="releaseDate" column="RELEASE_DATE" />
		<result property="condition" column="CONDITION" />
		<collection property="attachVOList" resultMap="attachMap"></collection>
	</resultMap>
	<resultMap type="attachVO" id="attachMap">
		<result property="seq" column="SEQ" />
		<result property="bookId" column="BOOK_ID" />
		<result property="filename" column="FILENAME" />
	</resultMap>
	<!--
		[도서 목록]
		관계차수 => BOOK_INFO : ATTACH = 1 : N
	-->
	<select id="listBook" parameterType="hashMap" resultMap="bookInfoMap">
		WITH U AS (
			SELECT ROW_NUMBER() OVER (ORDER BY T.BOOK_ID DESC ) RNUM
         , T.*
			FROM(
					SELECT A.BOOK_ID, A.NAME, A.UNIT_PRICE, A.AUTHOR,
						   SUBSTR(A.DESCRIPTION,1,7) ||
							<![CDATA[
						   '..<p>' DESCRIPTION,
						   A.PUBLISHER, A.CATEGORY, A.UNITS_IN_STOCK,
						   A.TOTAL_PAGES, A.RELEASE_DATE, A.CONDITION,
						   B.SEQ, B.FILENAME
					FROM BOOK_INFO A LEFT OUTER JOIN ATTACH B
					ON(A.BOOK_ID = B.BOOK_ID)
					]]>
					WHERE 1 = 1
					<include refid="search"></include>
				) T
		)
		SELECT U.*
		FROM U
		WHERE U.RNUM BETWEEN (#{currentPage} * #{size}) - (#{size} - 1) AND (#{currentPage} * #{size})
	</select>

	<select id="getBookInfoTotal" parameterType="hashMap" resultType="int">
		SELECT COUNT(*) FROM BOOK_INFO
		WHERE  1 = 1
		<include refid="search"></include>
	</select>

	<select id="detailBook" parameterType="String" resultMap="bookInfoMap">
		SELECT B.BOOK_ID, B.NAME, B.UNIT_PRICE, B.AUTHOR, B.DESCRIPTION
			 , B.PUBLISHER, B.CATEGORY, B.UNITS_IN_STOCK, B.TOTAL_PAGES, B.RELEASE_DATE, B.CONDITION
			 , A.SEQ, A.BOOK_ID, A.FILENAME
		FROM BOOK_INFO B LEFT OUTER JOIN ATTACH A ON(B.BOOK_ID = A.BOOK_ID)
		WHERE B.BOOK_ID = #{bookId}
	</select>

	<update id="updateBookPost" parameterType="bookInfoVO">
		UPDATE BOOK_INFO
		SET NAME=#{name},
			UNIT_PRICE=#{unitPrice},
			AUTHOR=#{author},
			PUBLISHER=#{publisher},
			RELEASE_DATE=#{releaseDate},
			UNITS_IN_STOCK=#{unitsInStock},
			CATEGORY=#{category},
			DESCRIPTION=#{description},
			TOTAL_PAGES=#{totalPages},
			CONDITION=#{condition}
		WHERE BOOK_ID=#{bookId}
	</update>

	<update id="updateAttach">
		UPDATE ATTACH
		SET FILENAME = #{filename}
		WHERE BOOK_ID = #{bookId}
	</update>
</mapper>


